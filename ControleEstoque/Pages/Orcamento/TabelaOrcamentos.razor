@using LidyDecorApp.Web.Pages.Orcamento
@using LidyDecorApp.Web.Models

<table id="orcamentossTable" class="table">
    <thead>
        <tr>
            <th class="d-none">Id</th>
            <th>Número</th>
            <th>Clientes</th>
            <th>Tipo de Evento</th>
            <th>Data</th>
            <th>Data do Evento</th>
            <th>Observações</th>
            <th>Valor Total</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var orcamentos in Orcamentos)
        {
            <tr>
                <td class="d-none">@orcamentos.Id</td>
                <td>@orcamentos.Numero</td>
                <td>@orcamentos.Clientes?.Nome</td>
                <td>@orcamentos.TipoEvento?.Tipo</td>
                <td>@orcamentos.Data.ToString("dd/MM/yyyy")</td>
                <td>@orcamentos.DataEvento.ToString("dd/MM/yyyy")</td>
                <td>@orcamentos.Observacoes</td>
                <td>@orcamentos.ValorTotal.ToString("C")</td>
                <td>
                    <button class="btn btn-primary" @onclick="() => OnEdit(orcamentos)">
                        <i class="bi bi-pencil"></i>
                    </button>
                    <button class="btn btn-danger" @onclick="() => DeleteOrcamentos(orcamentos.Id)">
                        <i class="bi bi-trash3"></i>
                    </button>
                    <button class="btn btn-info" @onclick="() => ShowDetails(orcamentos)">
                        <i class="bi bi-eye"></i> Ver Detalhes
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Modal -->
@if (selectedOrcamentos != null)
{
    <div class="modal fade show" tabindex="-1" style="display: block;" aria-modal="true" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Detalhes do Orçamento</h5>
                    <button type="button" class="btn-close" @onclick="CloseModal"></button>
                </div>
                <div class="modal-body">
                    <p><strong>Número:</strong> @selectedOrcamentos.Numero</p>
                    <p><strong>Clientes:</strong> @selectedOrcamentos.Clientes?.Nome</p>
                    <p><strong>Email:</strong> @selectedOrcamentos.Clientes?.Email</p>
                    <p><strong>Tipo de Evento:</strong> @selectedOrcamentos.TipoEvento?.Tipo</p>
                    <p><strong>Data:</strong> @selectedOrcamentos.Data.ToString("dd/MM/yyyy")</p>
                    <p><strong>Data do Evento:</strong> @(selectedOrcamentos.DataEvento.ToString("dd/MM/yyyy") ?? "Não definida")</p>
                    <p><strong>Observações:</strong> @selectedOrcamentos.Observacoes</p>
                    <p><strong>Valor Total:</strong> @selectedOrcamentos.ValorTotal.ToString("C")</p>
                    <h5>Produtoss</h5>
                    <ul>
                        @foreach (var produtosOrcamentos in selectedOrcamentos.ProdutosOrcamentos)
                        {
                            <li>
                                <p><strong>Nome:</strong> @produtosOrcamentos.Produtos.nome</p>
                                <p><strong>Descrição:</strong> @produtosOrcamentos.Produtos.descricao</p>
                                <p><strong>Quantidade:</strong> @produtosOrcamentos.Produtos.quantidade</p>
                            </li>
                        }
                    </ul>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="CloseModal">Fechar</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public List<LidyDecorApp.Web.Models.OrcamentosModel> Orcamentos { get; set; }
    [Parameter] public EventCallback<LidyDecorApp.Web.Models.OrcamentosModel> EditarOrcamentos { get; set; }
    [Parameter] public EventCallback<int> ExcluirOrcamentos { get; set; }
    [Inject] private IJSRuntime JSRuntime { get; set; }

    private LidyDecorApp.Web.Models.OrcamentosModel selectedOrcamentos;

    private void OnEdit(LidyDecorApp.Web.Models.OrcamentosModel orcamentos)
    {
        EditarOrcamentos.InvokeAsync(orcamentos);
    }

    private void DeleteOrcamentos(int idOrcamentos)
    {
        ExcluirOrcamentos.InvokeAsync(idOrcamentos);
    }

    private void ShowDetails(LidyDecorApp.Web.Models.OrcamentosModel orcamentos)
    {
        selectedOrcamentos = orcamentos;
    }

    private void CloseModal()
    {
        selectedOrcamentos = null;
    }
}
