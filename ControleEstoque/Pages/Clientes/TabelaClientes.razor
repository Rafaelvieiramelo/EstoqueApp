@using LidyDecorApp.Web.Pages.Clientes
@using LidyDecorApp.Web.Models

<table id="clientesTable" class="table">
    <thead>
        <tr>
            <th class="hide">Id</th>
            <th>Nome</th>
            <th>Email</th>
            <th>Telefone</th>
            <th>CpfCnpj</th>
            <th>Logradouro</th>
            <th>Numero</th>
            <th>Bairro</th>
            <th>Cidade</th>
            <th>Estado</th>
            <th>Cep</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var clientes in Clientes)
        {
            <tr>
                <td class="hide">@clientes.Id</td>
                <td>@clientes.Nome</td>
                <td>@clientes.Email</td>
                <td>@clientes.Telefone</td>
                <td>@clientes.CpfCnpj</td>
                <td>@clientes.Logradouro</td>
                <td>@clientes.Numero</td>
                <td>@clientes.Bairro</td>
                <td>@clientes.Cidade</td>
                <td>@clientes.Estado</td>
                <td>@clientes.Cep</td>
                <td>
                    <button class="btn btn-primary" @onclick="() => OnEdit(clientes)">
                        <i class="bi bi-pencil"></i>
                    </button>
                    <button class="btn btn-danger" @onclick="() => DeleteClientes(clientes.Id)">
                        <i class="bi bi-trash3"></i>
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    [Parameter] public List<ClientesModel> Clientes { get; set; }
    [Parameter] public EventCallback<ClientesModel> EditarClientes { get; set; }
    [Parameter] public EventCallback<int> ExcluirClientes { get; set; }
    [Inject] private IJSRuntime JSRuntime { get; set; }
    
    private void OnEdit(ClientesModel clientes)
    {
        EditarClientes.InvokeAsync(clientes);
    }

    private void DeleteClientes(int idClientes)
    {
        ExcluirClientes.InvokeAsync(idClientes);
    }
}