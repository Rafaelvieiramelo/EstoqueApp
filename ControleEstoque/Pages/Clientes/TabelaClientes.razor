@using EstoqueApp.Web.Pages.Clientes
@using EstoqueApp.Web.Models

<table id="clientesTable" class="table">
    <thead>
        <tr>
            <th class="hide">Id</th>
            <th>Nome</th>
            <th>Descrição</th>
            <th>Quantidade</th>
            <th>Preço Unit</th>
            <th>Categoria</th>
            <th>Fornecedor</th>
            <th>Valor Total</th>
            <th>Ações</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var cliente in Clientes)
        {
            <tr>
                <td class="hide">@cliente.Id</td>
                <td>@cliente.Nome</td>
                <td>@cliente.Email</td>
                <td>@cliente.Telefone</td>
                <td>@cliente.CpfCnpj</td>
                <td>@cliente.Logradouro</td>
                <td>@cliente.Numero</td>
                <td>@cliente.Bairro</td>
                <td>@cliente.Cidade</td>
                <td>@cliente.Estado</td>
                <td>@cliente.Cep</td>
                <td>
                    <button class="btn btn-primary" @onclick="() => OnEdit(cliente)">
                        <i class="bi bi-pencil"></i>
                    </button>
                    <button class="btn btn-danger" @onclick="() => DeleteCliente(cliente.Id)">
                        <i class="bi bi-trash3"></i>
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    [Parameter] public List<ClienteModel> Clientes { get; set; }
    [Parameter] public EventCallback<ClienteModel> EditarCliente { get; set; }
    [Parameter] public EventCallback<int> ExcluirCliente { get; set; }
    [Inject] private IJSRuntime JSRuntime { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("initializeDataTable");
        }
    }

    private void OnEdit(ClienteModel cliente)
    {
        EditarCliente.InvokeAsync(cliente);
    }

    private void DeleteCliente(int idCliente)
    {
        ExcluirCliente.InvokeAsync(idCliente);
    }
}