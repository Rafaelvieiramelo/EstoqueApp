@using EstoqueApp.Web.Pages
@using EstoqueApp.Web.Models

@using static EstoqueApp.Web.Pages.Produto.Produtos

@if (ShowModal)
{
    <div class="modal fade show" style="display: block;" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="false">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editModalLabel">@((IsEditMode ? "Editar" : "Adicionar") + " Produto")</h5>
                    <button type="button" class="btn-close" @onclick="HideModal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3 row">
                        <label for="nome" class="col-sm-3 col-form-label">Nome</label>
                        <div class="col-sm-9">
                            <input type="text" id="nome" @bind="ProdutoEdicao.nome" class="form-control" placeholder="Nome" />
                        </div>
                    </div>

                    <div class="mb-3 row">
                        <label for="descricao" class="col-sm-3 col-form-label">Descrição</label>
                        <div class="col-sm-9">
                            <textarea id="descricao" @bind="ProdutoEdicao.descricao" class="form-control" placeholder="Descrição"></textarea>
                        </div>
                    </div>

                    <div class="mb-3 row">
                        <label for="quantidade" class="col-sm-3 col-form-label">Quantidade</label>
                        <div class="col-sm-9">
                            <input type="number" id="quantidade" @bind="ProdutoEdicao.quantidade" class="form-control" placeholder="Quantidade" />
                        </div>
                    </div>

                    <div class="mb-3 row">
                        <label for="precoUnitario" class="col-sm-3 col-form-label">Preço Unit</label>
                        <div class="col-sm-9">
                            <input type="number" id="precoUnitario" @bind="ProdutoEdicao.precoUnitario" class="form-control" placeholder="Preço Unitário" />
                        </div>
                    </div>

                    <div class="mb-3 row">
                        <label for="categoriaId" class="col-sm-3 col-form-label">Categoria</label>
                        <div class="col-sm-9">
                            <select class="form-control" id="categoriaId" @bind="ProdutoEdicao.categoriaId">
                                @foreach (var categoria in Categorias)
                                {
                                    <option value="@categoria.id">@categoria.nome</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="mb-3 row">
                        <label for="fornecedorId" class="col-sm-3 col-form-label">Fornecedor</label>
                        <div class="col-sm-9">
                            <select class="form-control" id="fornecedorId" @bind="ProdutoEdicao.fornecedorId">
                                @foreach (var fornecedor in Fornecedores)
                                {
                                    <option value="@fornecedor.id">@fornecedor.nome</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="HideModal">Fechar</button>
                    <button type="button" class="btn btn-primary" @onclick="SalvarProduto">@((IsEditMode ? "Salvar" : "Adicionar"))</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public bool ShowModal { get; set; }
    [Parameter] public ProdutoModel ProdutoEdicao { get; set; }
    [Parameter] public List<Categoria> Categorias { get; set; }
    [Parameter] public List<Fornecedor> Fornecedores { get; set; }
    [Parameter] public EventCallback HideModalCallback { get; set; }
    [Parameter] public EventCallback<ProdutoModel> SalvarProdutoCallback { get; set; }
    [Parameter] public bool IsEditMode { get; set; }

    private async Task HideModal()
    {
        await HideModalCallback.InvokeAsync(null);
    }

    private async Task SalvarProduto()
    {
        await SalvarProdutoCallback.InvokeAsync(ProdutoEdicao);
        await HideModal();
    }
}
