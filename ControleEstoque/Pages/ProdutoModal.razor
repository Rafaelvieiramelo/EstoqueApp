@using static EstoqueApp.Web.Pages.Produtos
@inject HttpClient Http


@if (showModal)
{
    <div class="modal fade show" style="display: block;" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="false">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editModalLabel">Editar Produto</h5>
                    <button type="button" class="btn-close" @onclick="HideModal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <!-- Nome -->
                    <div class="mb-3 row">
                        <label for="nome" class="col-sm-3 col-form-label">Nome</label>
                        <div class="col-sm-9">
                            <input type="text" id="nome" @bind="produtoEdicao.nome" class="form-control" placeholder="Nome" />
                        </div>
                    </div>

                    <!-- Descrição -->
                    <div class="mb-3 row">
                        <label for="descricao" class="col-sm-3 col-form-label">Descrição</label>
                        <div class="col-sm-9">
                            <textarea id="descricao" @bind="produtoEdicao.descricao" class="form-control" placeholder="Descrição"></textarea>
                        </div>
                    </div>

                    <!-- Quantidade -->
                    <div class="mb-3 row">
                        <label for="quantidade" class="col-sm-3 col-form-label">Quantidade</label>
                        <div class="col-sm-9">
                            <input type="number" id="quantidade" @bind="produtoEdicao.quantidade" class="form-control" placeholder="Quantidade" />
                        </div>
                    </div>

                    <!-- Preço Unitário -->
                    <div class="mb-3 row">
                        <label for="precoUnitario" class="col-sm-3 col-form-label">Preço Unit</label>
                        <div class="col-sm-9">
                            <input type="number" id="precoUnitario" @bind="produtoEdicao.precoUnitario" class="form-control" placeholder="Preço Unitário" />
                        </div>
                    </div>

                    <!-- Categoria -->
                    <div class="mb-3 row">
                        <label for="categoriaId" class="col-sm-3 col-form-label">Categoria</label>
                        <div class="col-sm-9">
                            <select class="form-control" id="categoriaId" @bind="produtoEdicao.categoriaId">
                                @foreach (var categoria in categorias)
                                {
                                    <option value="@categoria.id">@categoria.nome</option>
                                }
                            </select>
                        </div>
                    </div>

                    <!-- Fornecedor -->
                    <div class="mb-3 row">
                        <label for="fornecedorId" class="col-sm-3 col-form-label">Fornecedor</label>
                        <div class="col-sm-9">
                            <select class="form-control" id="fornecedorId" @bind="produtoEdicao.fornecedorId">
                                @foreach (var fornecedor in fornecedores)
                                {
                                    <option value="@fornecedor.id">@fornecedor.nome</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="HideModal">Fechar</button>
                    <button type="button" class="btn btn-primary" @onclick="SalvarProduto">Salvar</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public Produto produtoEdicao { get; set; }
    [Parameter] public List<Categoria> categorias { get; set; }
    [Parameter] public List<Fornecedor> fornecedores { get; set; }
    [Parameter] public EventCallback<bool> OnClose { get; set; }

    private bool showModal = false;

    public void OpenModal()
    {
        showModal = true;
    }

    private void HideModal()
    {
        showModal = false;
        OnClose.InvokeAsync(true);
    }

    private async Task SalvarProduto()
    {
        // Aqui você pode chamar a API para salvar o produto
        await Http.PostAsJsonAsync("https://localhost:7071/Produtos/UpdateProdutoAsync", produtoEdicao);
        HideModal(); // Fecha o modal após salvar
    }
}
