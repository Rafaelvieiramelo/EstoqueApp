@using LidyDecorApp.Web.Pages.Usuario
@using LidyDecorApp.Web.Models

<table id="usuariosTable" class="table">
    <thead>
        <tr>
            <th class="hide">Id</th>
            <th>Nome</th>
            <th>E-mail</th>
            <th>Perfil</th>
            <th>Ativo</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var usuarios in Usuarios)
        {
            <tr>
                <td class="hide">@usuarios.id</td>
                <td>@usuarios.nome</td>
                <td>@usuarios.email</td>
                <td>@usuarios.role</td>
                <td>@usuarios.ativo</td>
                <td>
                    <button class="btn btn-primary" @onclick="() => OnEdit(usuarios)">
                        <i class="bi bi-pencil"></i>
                    </button>
                    <button class="btn btn-danger" @onclick="() => DeleteUsuarios(usuarios.id)">
                        <i class="bi bi-trash3"></i>
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    [Parameter] public List<UsuariosModel> Usuarios { get; set; }
    [Parameter] public EventCallback<UsuariosModel> EditarUsuarios { get; set; }
    [Parameter] public EventCallback<int> ExcluirUsuarios { get; set; }
    [Inject] private IJSRuntime JSRuntime { get; set; }

    // protected override async Task OnAfterRenderAsync(bool firstRender)
    // {
    //     if (firstRender)
    //     {
    //         await JSRuntime.InvokeVoidAsync("initializeDataTable");
    //     }
    // }

    private void OnEdit(UsuariosModel usuarios)
    {
        EditarUsuarios.InvokeAsync(usuarios);
    }

    private void DeleteUsuarios(int idUsuarios)
    {
        ExcluirUsuarios.InvokeAsync(idUsuarios);
    }
}