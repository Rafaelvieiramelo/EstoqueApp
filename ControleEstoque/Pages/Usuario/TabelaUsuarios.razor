@using EstoqueApp.Web.Pages.Usuario
@using EstoqueApp.Web.Models

<table id="usuariosTable" class="table">
    <thead>
        <tr>
            <th class="hide">Id</th>
            <th>Nome</th>
            <th>E-mail</th>
            <th>Perfil</th>
            <th>Ativo</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var usuario in Usuarios)
        {
            <tr>
                <td class="hide">@usuario.id</td>
                <td>@usuario.nome</td>
                <td>@usuario.email</td>
                <td>@usuario.role</td>
                <td>@usuario.ativo</td>
                <td>
                    <button class="btn btn-primary" @onclick="() => OnEdit(usuario)">
                        <i class="bi bi-pencil"></i>
                    </button>
                    <button class="btn btn-danger" @onclick="() => DeleteUsuario(usuario.id)">
                        <i class="bi bi-trash3"></i>
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    [Parameter] public List<UsuarioModel> Usuarios { get; set; }
    [Parameter] public EventCallback<UsuarioModel> EditarUsuario { get; set; }
    [Parameter] public EventCallback<int> ExcluirUsuario { get; set; }
    [Inject] private IJSRuntime JSRuntime { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("initializeDataTable");
        }
    }

    private void OnEdit(UsuarioModel usuario)
    {
        EditarUsuario.InvokeAsync(usuario);
    }

    private void DeleteUsuario(int idUsuario)
    {
        ExcluirUsuario.InvokeAsync(idUsuario);
    }
}